#!/bin/bash

# This bash script creates a virtual disk image with an msdos partition table

# Usage instructions
if [ $# -ne 4 ]; then
    echo "Usage: $0 <virtual_disk_name> <num_partitions> <blocksize> <memsize>"
    exit 1
fi

DISK_IMAGE=$1
NUM_PARTITIONS=$2
BLOCKSIZE=$3
MEMSIZE=$4

if [ $((BLOCKSIZE % 512)) -ne 0 ] || [ $BLOCKSIZE -lt 512 ]; then
    echo "BLOCKSIZE must be a multiple of 512 and greater than or equal to 512"
    exit 1
fi

BUILD_DIR=$(dirname $DISK_IMAGE)

SDDF_TRANSFER_SIZE=4096
SECTORSIZE=512
MULTIPLE=$(( SDDF_TRANSFER_SIZE / SECTORSIZE ))

COUNT=$(( MEMSIZE / SECTORSIZE ))
COUNT=$(( (COUNT / MULTIPLE) * MULTIPLE )) # @ericc: Ensure that the disk size is a multiple of $MULTIPLE blocks

POFFSET=$MULTIPLE

# Create a file to act as a virtual disk
dd if=/dev/zero of=$DISK_IMAGE bs=$SECTORSIZE count=$COUNT

FS_COUNT=$(( (COUNT - POFFSET - 1) / NUM_PARTITIONS ))
FS_COUNT=$(( (FS_COUNT / MULTIPLE) * MULTIPLE )) # @ericc: This ensures that both FAT filesystems are a multiple of $MULTIPLE blocks
FS_COUNT_ADD=$(( FS_COUNT - 1 ))

FS_COUNT_BLOCKSIZE=$(( FS_COUNT / (BLOCKSIZE / SECTORSIZE) ))

# Create MBR partition table
PREV=$POFFSET
{
echo o # Create a new empty DOS partition table

# Loop to create each partition
for i in $(seq 1 $NUM_PARTITIONS)
do
    echo n # Add a new partition
    echo p # Primary partition
    if [ $i != 4 ]; then
        echo $i # Partition number
    fi
    echo $PREV # First sector
    echo +$FS_COUNT_ADD # Last sector
    PREV=$(( PREV + FS_COUNT_ADD + 1 ))
done

echo w # Write changes
} | fdisk $DISK_IMAGE

fdisk -l $DISK_IMAGE

# Create the FAT filesystem
rm -f $BUILD_DIR/fat.img
mkfs.fat -C $BUILD_DIR/fat.img -S $BLOCKSIZE $(( (FS_COUNT_BLOCKSIZE * BLOCKSIZE) / 1024 ))

# Copy the FAT filesystem to the virtual disk
for i in $(seq 0 $(( NUM_PARTITIONS - 1 )))
do
    echo "Copying FAT filesystem to partition $i, seek $((POFFSET + i * FS_COUNT)), count $FS_COUNT, blocksize $SECTORSIZE"
    dd if=$BUILD_DIR/fat.img of=$DISK_IMAGE bs=$SECTORSIZE seek="$((POFFSET + i * FS_COUNT))" count=$FS_COUNT
done
